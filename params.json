{"name":"Bigbase","tagline":"BigBase - read optimized, fully HBase-compatible, NoSQL Data Store","body":"BigBase\r\n======\r\n\r\n###Q: What is BigBase?\r\n\r\nBigBase is a read-optimized version of HBase NoSQL data store and is FULLY, 100% HBase compatible.\r\n100% compatibility means that the upgrade from HBase to BigBase and other way around does not \r\ninvolve data migration and even can be made without stopping the cluster (via rolling restart). \r\n\r\n###Q: What do you mean by 'read-optimized'?\r\n\r\nBy 'read-optimized' we mean that general purpose of BigBase is to improve both read operations performance\r\nand read operations latency distribution.\r\n\r\n###Q: How do you achieve this?\r\n\r\nBy introducing multi-level caching to HBase. L1 - row cache, L2 - block cache in RAM and L3 - disk cache on SSD (***).  \r\n\r\n###Q: What HBase versions are supported?\r\n\r\nHBase 0.94.x onwards (0.94, 0.96, 0.98). You may try 0.92 as well, but this version has not been tested with BigBase.\r\n> **Note:** BigBase has two versions: HBase 0.94 and HBase 0.96+ compatible.\r\n\r\n###Q: Can I upgrade existing HBase cluster, what are requirements and how long will this upgrade take?\r\n\r\nYes, you can upgrade existing HBase 0.94+ cluster. Actually, this is the only option we provide right now.\r\nThe time varies. You will need to stop the cluster, install new binaries and start cluster again. \r\nThis will take from several minutes to maximum half an hour depending on the cluster size and skill \r\nlevel of an upgrade operator. You can do rolling upgrade as well.\r\n\r\n###Q: I do not have HBase cluster can I try BigBase?\r\n\r\nCurrently, we do not provide BigBase as a full HBase distributive, you will need to install HBase first. \r\nGo to [Apache HBase](http://hbase.apache.org) for download and installation instructions. \r\n\r\n###Q: What is the difference between BigBase and 'vanilla' version of HBase (0.94, 0.96, 0.98)?\r\n\r\nThere are two major new features in BigBase, which are either missing in HBase or have sub-optimal implementation: \r\noff heap RowCache and off heap BlockCache. RowCache is designed after original BigTable's scan cache. It caches\r\nhot rows data and does it in off heap memory. Read ROWCACHE.txt for more information. Another major new feature is \r\noff heap BlockCache. HBase 0.96 onwards has already off heap block cache (which is called bucket cache), but BigBase's \r\nblock cache implementation is far superior in several aspects: scalability, latency and performance, besides this, \r\noff heap BlockCache is supported in BigBase 0.94 onwards and 'vanilla' HBase does not support off heap block cache in 0.94.x.\r\n    \r\n\r\n### License\r\n\r\nBigBase is licensed under [Affero GPL 3](http://www.gnu.org/licenses/agpl-3.0.html).\r\n \r\n> **Note:** \"View on GitHub\" is probably not working? This is direct link to the code repository: https://github.com/VladRodionov/bigbase. Right click on it and select \"Open in new tab\" or copy-past link to a browser's address field. You can also right click mouse on \"View on GitHub\" link and select \"Open in new tab\". Yeah, a little bit quirky. \r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}